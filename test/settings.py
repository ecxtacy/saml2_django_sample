"""
Django settings for test project.

Generated by 'django-admin startproject' using Django 5.0.6.

For more information on this file, see
https://docs.djangoproject.com/en/5.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.0/ref/settings/
"""

from pathlib import Path
import os
import saml2
from saml2 import BINDING_HTTP_POST, BINDING_HTTP_REDIRECT

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
ATTRIBUTE_MAP_DIR = os.path.join(BASE_DIR, 'attribute-maps')
print("Attribute Map Directory:", ATTRIBUTE_MAP_DIR)  # Add this line for debugging


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-kdrrg_aa%e-d(&f-3x+gq&bv_^upj9s9lya#++0s3m7t)$a@++'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []

OKTA_URI = ''
# http://www.okta.com/exkhrxepziYv7xmkI5d7


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'djangosaml2',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'djangosaml2.middleware.SamlSessionMiddleware',
]

ROOT_URLCONF = 'test.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'test.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.0/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.0/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

SAML_ATTRIBUTE_MAPPING = {
    # 'username': ('username', ),
    'email': ('email', ),
}

SAML_CONFIG = {
    'xmlsec_binary': '/usr/bin/xmlsec1',
    'entityid': 'http://localhost:3000/saml2/metadata/',
    'attribute_map_dir': os.path.join(BASE_DIR, 'attribute-maps'),
    'service': {
        'sp': {
            'name': 'Django SAML2 SP',
            'endpoints': {
                'assertion_consumer_service': [
                    ('http://localhost:3000/saml2/acs/', BINDING_HTTP_POST),
                ],
                'single_logout_service': [
                    ('http://localhost:3000/saml2/sls/', BINDING_HTTP_REDIRECT),
                ],
            },
            'required_attributes': ['email'],
            'idp': {
                f'{OKTA_URI}/sso/saml': {
                    'single_sign_on_service': {
                        BINDING_HTTP_REDIRECT: f'{OKTA_URI}/sso/saml',
                    },
                    'single_logout_service': {
                        BINDING_HTTP_REDIRECT: f'{OKTA_URI}/slo/saml',
                    },
                },
            },
        },
    },
    'metadata': {
        'remote': [
            {
                'url': f'{OKTA_URI}/sso/saml/metadata',
            },
        ],
    },
    'debug': 1,
    'key_file': os.path.join(BASE_DIR, 'certs', 'sp-key.pem'),  # Private key
    'cert_file': os.path.join(BASE_DIR, 'certs', 'sp-cert.pem'),  # Public key
    'encryption_keypairs': [{
        'key_file': os.path.join(BASE_DIR, 'certs', 'sp-encryption-key.pem'),
        'cert_file': os.path.join(BASE_DIR, 'certs', 'sp-encryption-cert.pem'),
    }],
    'valid_for': 24,  # Hours
}

AUTHENTICATION_BACKENDS = [
    'django.contrib.auth.backends.ModelBackend',
    'djangosaml2.backends.Saml2Backend',
]

LOGIN_URL = '/saml2/login/'
LOGOUT_URL = '/saml2/logout/'
LOGIN_REDIRECT_URL = '/'
LOGOUT_REDIRECT_URL = '/'

AUTHENTICATION_BACKENDS = [
    'django.contrib.auth.backends.ModelBackend',  # Keep the default backend
    'djangosaml2.backends.Saml2Backend',  # Add SAML2 backend
]

LOGIN_URL = '/saml2/login/'
LOGOUT_URL = '/saml2/logout/'
LOGIN_REDIRECT_URL = '/'
LOGOUT_REDIRECT_URL = '/'

print("basedir is")
print(BASE_DIR)

SAML_DJANGO_USER_MAIN_ATTRIBUTE = 'email'